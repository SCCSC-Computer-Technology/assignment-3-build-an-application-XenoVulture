#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StateInfoSearch
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="State_Info")]
	public partial class StateDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    #endregion
		
		public StateDBDataContext() : 
				base(global::StateInfoSearch.Properties.Settings.Default.State_InfoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StateName;
		
		private string _Capital;
		
		private string _City1;
		
		private string _City2;
		
		private string _City3;
		
		private System.Nullable<double> _Population;
		
		private string _Flag;
		
		private string _Colors;
		
		private string _Bird;
		
		private string _Flower;
		
		private System.Nullable<decimal> _Median_Income;
		
		private System.Nullable<double> _Comp_Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCapitalChanging(string value);
    partial void OnCapitalChanged();
    partial void OnCity1Changing(string value);
    partial void OnCity1Changed();
    partial void OnCity2Changing(string value);
    partial void OnCity2Changed();
    partial void OnCity3Changing(string value);
    partial void OnCity3Changed();
    partial void OnPopulationChanging(System.Nullable<double> value);
    partial void OnPopulationChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnColorsChanging(string value);
    partial void OnColorsChanged();
    partial void OnBirdChanging(string value);
    partial void OnBirdChanged();
    partial void OnFlowerChanging(string value);
    partial void OnFlowerChanged();
    partial void OnMedian_IncomeChanging(System.Nullable<decimal> value);
    partial void OnMedian_IncomeChanged();
    partial void OnComp_JobsChanging(System.Nullable<double> value);
    partial void OnComp_JobsChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State", Storage="_StateName", DbType="NVarChar(255)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="NVarChar(255)")]
		public string Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City1", DbType="NVarChar(255)")]
		public string City1
		{
			get
			{
				return this._City1;
			}
			set
			{
				if ((this._City1 != value))
				{
					this.OnCity1Changing(value);
					this.SendPropertyChanging();
					this._City1 = value;
					this.SendPropertyChanged("City1");
					this.OnCity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City2", DbType="NVarChar(255)")]
		public string City2
		{
			get
			{
				return this._City2;
			}
			set
			{
				if ((this._City2 != value))
				{
					this.OnCity2Changing(value);
					this.SendPropertyChanging();
					this._City2 = value;
					this.SendPropertyChanged("City2");
					this.OnCity2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City3", DbType="NVarChar(255)")]
		public string City3
		{
			get
			{
				return this._City3;
			}
			set
			{
				if ((this._City3 != value))
				{
					this.OnCity3Changing(value);
					this.SendPropertyChanging();
					this._City3 = value;
					this.SendPropertyChanged("City3");
					this.OnCity3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Float")]
		public System.Nullable<double> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="NVarChar(MAX)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colors", DbType="NVarChar(255)")]
		public string Colors
		{
			get
			{
				return this._Colors;
			}
			set
			{
				if ((this._Colors != value))
				{
					this.OnColorsChanging(value);
					this.SendPropertyChanging();
					this._Colors = value;
					this.SendPropertyChanged("Colors");
					this.OnColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bird", DbType="NVarChar(255)")]
		public string Bird
		{
			get
			{
				return this._Bird;
			}
			set
			{
				if ((this._Bird != value))
				{
					this.OnBirdChanging(value);
					this.SendPropertyChanging();
					this._Bird = value;
					this.SendPropertyChanged("Bird");
					this.OnBirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flower", DbType="NVarChar(255)")]
		public string Flower
		{
			get
			{
				return this._Flower;
			}
			set
			{
				if ((this._Flower != value))
				{
					this.OnFlowerChanging(value);
					this.SendPropertyChanging();
					this._Flower = value;
					this.SendPropertyChanged("Flower");
					this.OnFlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Median_Income", DbType="Money")]
		public System.Nullable<decimal> Median_Income
		{
			get
			{
				return this._Median_Income;
			}
			set
			{
				if ((this._Median_Income != value))
				{
					this.OnMedian_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Median_Income = value;
					this.SendPropertyChanged("Median_Income");
					this.OnMedian_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp_Jobs", DbType="Float")]
		public System.Nullable<double> Comp_Jobs
		{
			get
			{
				return this._Comp_Jobs;
			}
			set
			{
				if ((this._Comp_Jobs != value))
				{
					this.OnComp_JobsChanging(value);
					this.SendPropertyChanging();
					this._Comp_Jobs = value;
					this.SendPropertyChanged("Comp_Jobs");
					this.OnComp_JobsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
